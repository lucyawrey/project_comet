syntax = "proto3";
package administration;

service Administration {
    rpc CreateAccessToken (CreateAccessTokenRequest) returns (CreateAccessTokenReply);
    rpc GetAccessTokens (GetAccessTokensRequest) returns (GetAccessTokensReply);
    rpc VerifyAccessToken (VerifyAccessTokenRequest) returns (AccessToken);
    rpc DeleteAccessToken (DeleteAccessTokenRequest) returns (Message);
}

message Message {
    string message = 1;
}

message CreateAccessTokenRequest {
    AccessLevel access_level = 1;
    optional string game_server_id = 2;
    optional int64 lifetime_seconds = 3;
}

message CreateAccessTokenReply {
    string access_token = 1;
    AccessToken access_token_data = 2;
}

message AccessToken {
    int64 id = 1;
    AccessLevel access_level = 2;
    optional string game_server_id = 3;
    optional int64 expires_at = 4;
}

enum AccessLevel {
    Default=0;
    GameServer=1;
    Administrator=2;
}

message GetAccessTokensRequest {
    optional int32 page_size = 1;
    optional int32 page = 2;
    optional string access_token = 3;
    optional bool can_expire = 4;
}

message GetAccessTokensReply {
    repeated AccessToken access_token_data_list = 1;
}

message VerifyAccessTokenRequest {
    string access_token = 1;
}

message DeleteAccessTokenRequest {
    int64 id = 1;
}
