syntax = "proto3";
package api.administration;
import "api/proto/api/shared.proto";

service Administration {
    rpc CreateAccessToken (CreateAccessTokenRequest) returns (CreateAccessTokenReply);
    rpc VerifyAccessToken (VerifyAccessTokenRequest) returns (api.shared.AccessToken);
    rpc GetAccessTokens (GetAccessTokensRequest) returns (GetAccessTokensReply);
    rpc DeleteAccessToken (api.shared.ByIdRequest) returns (api.shared.Message);

    rpc GetUser (GetUserRequest) returns (api.shared.User);
    rpc GetUsers (GetUsersRequest) returns (GetUsersReply);
    rpc UpdateUser (UpdateUserRequest) returns (api.shared.User);
    rpc LogOutUser (api.shared.ByIdRequest) returns (api.shared.Message);
    rpc ResetUserRecoveryCode(api.shared.ByIdRequest) returns (ResetUserRecoveryCodeReply);

    // TODO Server and World management
}

message CreateAccessTokenRequest {
    api.shared.AccessLevel access_level = 1;
    optional string game_server_id = 2;
    optional int64 lifetime_seconds = 3;
}

message CreateAccessTokenReply {
    string access_token = 1;
    api.shared.AccessToken access_token_data = 2;
}

message GetAccessTokensRequest {
    optional int32 page_size = 1;
    optional int32 page = 2;
    optional string access_token = 3;
    optional bool can_expire = 4;
}

message GetAccessTokensReply {
    int32 page = 1;
    int32 page_count = 2;
    repeated api.shared.AccessToken access_token_data_list = 3;
}

message VerifyAccessTokenRequest {
    string access_token = 1;
}

message GetUserRequest {
    oneof ref {
        int64 id = 1;
        string username = 2;
    }
}

message GetUsersRequest {
    optional int32 page_size = 1;
    optional int32 page = 2;
    optional api.shared.Role role = 3;
}

message GetUsersReply {
    int32 page = 1;
    int32 page_count = 2;
    repeated api.shared.User user_list = 3;
}

message UpdateUserRequest {
    int64 id = 1;
    optional string username = 3;
    optional api.shared.Role role = 4;
}

message ResetUserRecoveryCodeReply {
    string recovery_code = 1;
}
